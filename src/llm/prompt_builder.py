class PromptBuilder:
    def __init__(self, question, mode):
        """
        初始化 PromptBuilder 实例

        Args:
        - question (str): 输入的问题
        - mode (str): 模式，可选值为 question_decompose, filter_triples, filter_entities,
                      structural_enrich, feature_enrich, qa
        """
        self.question = question
        self.mode = mode

        # 根据 mode 初始化各个部分内容
        self.role = self.get_role()
        self.instruction = self.get_instruction()
        self.demonstrations = self.get_demonstrations()

        # 组装 prompt
        self.result_prompt = self.build_prompt()

    def get_role(self):
        """
        获取 role 部分的内容（<<SYS>><</SYS>> 中的描述）。
        根据 mode 不同，返回不同的角色信息。
        """
        role_dict = {
            'question_decompose': "",
            'triples_trans': "",
            'filter_triples': "",
            'filter_entities': "",
            'structural_enrich': (
                "You are a linguist capable of understanding user queries and the semantic information "
                "contained in triples. You can enhance the semantic information of triples based on the principles of similarity, "
                "symmetry, and transitivity, bridging the semantic gap between the triples and the user queries. Your goal is to "
                "augment the triples semantically so they can better address the user’s queries."
            ),
            'feature_enrich': (
                "You are a linguist with extensive expertise in ontology knowledge. You have the ability to "
                "understand the context of entities, including user queries and the semantic information of triples. Based on "
                "the contextual information of an entity, you can accurately and appropriately add ontologies to the entity. "
                "Your goal is to bridge the semantic gap between entities and user queries by adding relevant ontologies, "
                "thereby semantically augmenting the entities to enable them to better address the user's queries."
            ),
            'qa': "",
            'direct_qa': "",
            'filter_gt_triples': ""
        }
        return role_dict.get(self.mode, "You are a helpful assistant.")

    def get_instruction(self):
        """
        获取 instruction 部分的内容。
        根据 mode 不同，返回不同的指令信息。
        """
        instruction_dict = {
            'question_decompose': (
                "Given a question, decompose it step by step into smaller components until it is broken down into unit queries "
                "that can be directly answered without further reasoning or decomposition. If a question can still be further broken down, it must be divided into at least two or more sub-questions."
                "Otherwise, the question is considered a unit query. If the given question is already a unit query, no decomposition "
                "is needed. Your output should only include the tree structure of the "
                "decomposed question, with sub-questions indented using '-', and no additional content should be provided, just the tree structure. "
                "The format for the decomposition tree is as follows:\n"
                "### decomposition tree format ###\n"
                "question\n"
                "-sub-question\n"
                "--sub-sub-question\n"
                "---sub-sub-sub-question\n"
                "---sub-sub-sub-question\n"
                "--sub-sub-question\n"
                "-sub-question\n"
                "### decomposition tree format ###\n"
                "I will provide examples, please complete your task after reviewing them."
            ),
            'triples_trans': (
                "Given a list of triples in the format (h, r, t), where h represents the head entity, t represents the tail entity, and r represents the relationship between the head and tail entities, your task is to convert each triple into two natural language triple queries using the following two patterns:\n"
                "1. **(h, r, ?):** Mask the tail entity t. Use the head entity h and the relation r as the known information to generate a question.\n"
                "2. **(?, r, t):** Mask the head entity h. Use the tail entity t and the relation r as the known information to generate a question.\n"
                "For each triple, the result should include two queries in natural language corresponding to the two patterns.\n"
                "### Example:\n"
                "Input triple: (Beijing, located in, China)\n"
                "Conversion:\n"
                "1. Using the pattern (h, r, ?): \"Which country does Beijing locate?\"\n"
                "2. Using the pattern (?, r, t): \"What cities or places are located in China?\"\n"
                "### Output format:\n"
                "For each triple, write the original triple followed by its two generated queries, separated by `<SEP>`. Use one line per triple.\n"
                "Please follow the specified format to generate the output for all provided triples.\n"
                "I will provide examples, please complete your task after reviewing them.\n"
            ),
            'filter_triples': (
                "Given a set of user unit queries, triples, and their corresponding triple unit queries "
                "(format: triple<SEP>triple unit query), your task is to identify the related subgraph of triple unit queries "
                "for each user unit query and return the triples corresponding to those triple unit queries. A user unit query "
                "may be associated with multiple triple unit queries or none at all. For each user unit query, find the "
                "relevant triples and output them in the format: user unit query<SEP>triple. If multiple triple unit queries are "
                "related, output in the format: user unit query<SEP>triple1<SEP>triple2<SEP>triple3<SEP>..., and if no related triple unit "
                "queries exist, output: user unit query<SEP>None. I will provide you with examples, please complete your task "
                "after reviewing them."
            ),
            'filter_entities': "",
            'structural_enrich': (
                "You are given a subgraph that consists of multiple triples, where each triple corresponds to one or more user queries.\n"
                "The format is as follows:\n"
                "triple(entity1, relation, entity2) - query1 - query2 - query3 - ...\n"
                "Here, a query represents a question from the user. The triple associated with a query may contain information relevant to answering the question.\n"
                "However, the semantic connections both within and between triples are typically weak, lacking dense links to clearly establish relationships between entities.\n"
                "As a result, answers to the queries are often implicit and require complex reasoning.\n"
                "To bridge the semantic gap between the queries and the triples, please perform semantic enhancement on the subgraph by considering the user queries.\n"
                "Specifically, you will utilize the following properties for semantic enhancement: Similarity, Symmetry, and Transitivity.\n"
                "Below, you will find detailed explanations of these properties along with examples. Please keep these principles in mind as you perform semantic enhancement.\n"
                "{Similarity}\n"
                "The property of similarity indicates that for a given triple (e1, r1, e2), we can find an alternative relationship r2 that is semantically different from r1\n"
                "but shares the same directional connection between e1 and e2. In other words, the entities e1 and e2 remain connected in the same direction,\n"
                "but the meaning of the connection changes to reflect the semantics of r2. For example:\n"
                "If (e1, r1, e2) exists, then (e1, r2, e2) may also exist, where r1 ≠ r2, and r1 and r2 represent different relationships.\n"
                "{/Similarity}\n"
                "{Symmetry}\n"
                "The property of symmetry indicates that for a given triple (e1, r1, e2), there exists a new relationship r2 that is semantically different from r1\n"
                "and reverses the direction of the connection between e1 and e2. In other words, the new triple swaps the roles of e1 and e2 while preserving\n"
                "their semantic relationship in a reversed form. For example:\n"
                "If (e1, r1, e2) exists, then (e2, r2, e1) may also exist, where r1 ≠ r2, and r1 and r2 represent different relationships.\n"
                "{/Symmetry}\n"
                "{Transitivity}\n"
                "The property of transitivity indicates that when two triples share a common entity, we can combine their relationships into a new relationship\n"
                "that connects the remaining two entities directly. Specifically, if (e1, r1, e2) and (e2, r2, e3) exist, then there exists a new relationship r3\n"
                "that semantically encompasses both r1 and r2, forming a new triple (e1, r3, e3). The new relationship r3 captures the combined semantics of r1 and r2.\n"
                "For example:\n"
                "Given (e1, r1, e2) and (e2, r2, e3), we derive (e1, r3, e3), where r3 combines the meanings of r1 and r2.\n"
                "{/Transitivity}\n"
                "{Procedure}\n"
                "Step 1:\n"
                "Examine the given triples and their associated queries. Understand the information contained within the triples and the questions being asked in the queries.\n"
                "Step 2:\n"
                "Using the similarity and symmetry properties, perform semantic enhancement on the given 1-hop subgraph (i.e., triples where connections involve only directly linked entities).\n"
                "Step 3:\n"
                "Using the transitivity property, perform semantic enhancement on the given multi-hop subgraph (i.e., triples where connections involve intermediary entities).\n"
                "Step 4:\n"
                "Output the newly generated triples resulting from the semantic enhancement process.\n"
                "{/Procedure}\n"
                "I will provide examples, please complete your task after reviewing them."
            ),
            'feature_enrich': (
                "You are provided with an entity list. Each entity in the list is accompanied by its context information, which consists of two parts:\n"
                "1. Relevant triples associated with the entity.\n"
                "2. Relevant user queries associated with the entity.\n"
                "The context format for each entity is as follows:\n"
                "[$entity$ context]\n"
                "relavent triple(s):triple1-triple2-triple3-...\n"
                "relavent user query(ies):query1-query2-query3-...\n"
                "[/$entity$ context]\n"
                "Your task is to analyze the context information of each entity, apply your expert knowledge, and assign an appropriate ontology to the entity.\n"
                "The added ontology should:\n"
                "1. Be semantically consistent with the entity's context information.\n"
                "2. Avoid any contradictions or irrelevance with the given context.\n"
                "3. Enhance the entity's ability to better answer the user query(ies) in its context.\n"
                "Store the ontology assignments in a set called {result}. The {result} set is initially empty. Each ontology assignment should follow the format:\n"
                "{result}\n"
                "(entity,ontology_relation,newly added ontology)\n"
                "...\n"
                "{/result}\n"
                "You must choose an appropriate ontology relation from the options provided below.\n"
                "{ontology relation definition}\n"
                "HYP: Hypernym relation\n"
                "Refers to the relation where a broader or more general concept includes or encompasses a more specific or specialized concept.\n"
                "Hypernym_isA\n"
                "Is a type of...\n"
                "Hypernym_locateAt\n"
                "Is located at...\n"
                "Hypernym_mannerOf\n"
                "A is a specific implementation or way of B. Similar to \"isA,\" but used for verbs. For example, \"auction\" -> \"sale\".\n"
                "IND: Induction relation\n"
                "Refers to the relation between individual entities and conceptual generalizations derived from a class of entities with common characteristics.\n"
                "Induction_belongTo\n"
                "This relation is commonly used in SPG to describe the classification relation from entity types to concept types. For example, \"company event\" -> \"company event category\".\n"
                "INC: Inclusion relation\n"
                "Expresses the relation between parts and the whole.\n"
                "Inclusion_isPartOf\n"
                "A is a part of B.\n"
                "Inclusion_madeOf\n"
                "A is made up of B. For example, \"bottle\" -> \"plastic\".\n"
                "Inclusion_derivedFrom\n"
                "A is derived from or originated from B, used to express composite concepts.\n"
                "Inclusion_hasContext\n"
                "A is a word used in the context of B, where B can be a subject area, technical field, or regional dialect. For example, \"astern\" -> \"ship\".\n"
                "{/ontology relation definition}\n"
                "You can only choose an appropriate {ontology_relation} from {Hypernym_isA, Hypernym_locateAt, Hypernym_mannerOf, Induction_belongTo, Inclusion_isPartOf, Inclusion_madeOf, Inclusion_derivedFrom, Inclusion_hasContext}.\n"
                "Your task will follow the four steps below:\n"
                "{Procedure}\n"
                "Step 1:\n"
                "For the first $entity$ in the entity list, read its context information carefully. Based on the provided context and your expert knowledge, answer the following question:\n"
                "Does this $entity$ already have an ontology assigned?\n"
                "If yes, proceed to Step 2.\n"
                "If no, move to Step 3.\n"
                "Step 2:\n"
                "Using the entity's context information and your expert knowledge:\n" 
                "Identify a list of appropriate ontologies for the entity.\n"  
                "For each ontology in this list, select the most suitable ontology relation from the {ontology_relation} options.\n"
                "Format each assignment as (entity, ontology_relation, newly added ontology) and add it to the {result} set.\n"
                "Remove this $entity$ and its corresponding context information from the entity list.\n"
                "Output the current {result} set in the following format:\n"
                "{result}\n"
                "...\n"
                "{/result}\n"
                "Then move to Step 3.\n"
                "Step 3:\n"
                "Check if the entity list is now empty:\n"
                "If the list is empty, proceed to Step 4.\n"
                "If the list is not empty, return to Step 1 and repeat the process for the next $entity$.\n"
                "Step 4:\n"
                "Once all entities have been processed, output the final {result} set containing all (entity, ontology_relation, newly added ontology) assignments in the following format:\n"
                "{result}\n"
                "(entity,ontology_relation,newly added ontology)\n"
                "...\n"
                "{/result}\n"
                "{/Procedure}\n"
                "I will provide examples, please complete your task after reviewing them.\n"
            ),
            'qa': (
                "You are given an input question along with additional information to assist in answering the question. The additional information includes a set of relevant triples and questions corresponding to each triple. The format of a triple is as follows:\n"
                "(e1, r, e2)\n"
                "Your task is to perform step-by-step reasoning based on the provided additional information to arrive at the answer. You should output your process of thinking and reasoning then the final answer. Each answer should be as close to a single entity as possible, rather than a long sentence. Each answer should not be in the form of an ID, such as: \"m.0n1v8cy\", \"m.0jx21d\", or similar formats. If the provided information is insufficient to infer the correct answer, please use your internal knowledge to generate a response. Please try to output all possible answers you consider correct. If there is only one answer, directly output that answer. If there are multiple answers, separate them using <SEP>.\n"
                "### Input Format ###\n"
                "Input:\n"
                "question:\n"
                "{input question}\n"
                "information:\n"
                "{triple1}"
                "{triple2}"
                "{triple3<SEP>query3.1<SEP>query3.2<SEP>query3.3<SEP>...}\n"
                "{triple4<SEP>query4.1<SEP>query4.2<SEP>query4.3<SEP>...}\n"
                "### Output Format ###\n"
                "Output:\n"
                "{thoughts & reason}\n"
                "Your process of thinking and reasoning\n"
                "...\n"
                "{/thoughts & reason}\n"
                "Final answer:\n"
                "{answer}"
            ),
            'direct_qa': (
                "You are given an input question along with additional information to assist in answering the question. The additional information includes a set of relevant triples. The format of a triple is as follows:\n"
                "(e1, r, e2)\n"
                "Your task is to perform step-by-step reasoning based on the provided additional information to arrive at the answer. You should output your process of thinking and reasoning then the final answer. Each answer should be as close to a single entity as possible, rather than a long sentence. Each answer should not be in the form of an ID, such as: \"m.0n1v8cy\", \"m.0jx21d\", or similar formats. If the provided information is insufficient to infer the correct answer, please use your internal knowledge to generate a response. Please try to output all possible answers you consider correct. If there is only one answer, directly output that answer. If there are multiple answers, separate them using <SEP>.\n"
                "### Input Format ###\n"
                "Input:\n"
                "question:\n"
                "{input question}\n"
                "information:\n"
                "{triple1}\n"
                "{triple2}\n"
                "{triple3}\n"
                "...\n"
                "### Output Format ###\n"
                "Output:\n"
                "{thoughts & reason}\n"
                "Your process of thinking and reasoning\n"
                "...\n"
                "{/thoughts & reason}\n"
                "Final answer:\n"
                "{answer}"
            ),
            'filter_gt_triples':(
                "Given a question, answer(s), topic entity(ies), and a list of triples related to the question, your task is to identify the relevant triples from the given list that can be used to infer the correct answer(s) starting from the topic entity(ies). You should then return these triples. The total number of triples returned should not exceed 100.\n\n"
                "The provided list of triples may fall into one of the following three scenarios:\n"
                "1. The list contains all the key information needed to infer the correct answer(s) from the topic entity(ies).\n"
                "2. The list contains some, but not all, of the key information needed to infer the correct answer(s) from the topic entity(ies), with some crucial information missing.\n"
                "3. The list does not contain any key information needed to infer the correct answer(s) from the topic entity(ies).\n\n"
                "For these three scenarios, take the following actions and reasoning approaches:\n"
                "1. **For Scenario 1:** Since the list contains all the necessary information to infer the correct answer(s) from the topic entity(ies), you should analyze the given question, answer(s), topic entity(ies), and the list of triples to identify the critical triples required for inference. Return only these relevant triples.\n"
                "2. **For Scenario 2:** Since the list provides some of the critical information needed but is missing some pieces for inference, you should analyze the given question, answer(s), topic entity(ies), and the list of triples to identify the triples that contribute to the inference. Additionally, you need to reason and infer any missing key information, create new triples as needed to fill the gaps, and return both the relevant triples from the list and the newly generated triples.\n"
                "3. **For Scenario 3:** Since the list does not contain any relevant key information, you need to rely on reasoning and analysis based on the given question, answer(s), and topic entity(ies). Generate the missing triples necessary for the inference and return only these newly created triples.\n\n"
                "### Input Format ###\n"
                "Input:\n"
                "question:\n"
                "{question}\n"
                "answer:\n"
                "{answer list}\n"
                "topic entity:\n"
                "{topic entity list}\n"
                "triples:\n"
                "{triple1}\n"
                "{triple2}\n"
                "{triple3}\n"
                "...\n"
                "### Triple Format ###\n"
                "(h, r, t)\n"
                "h and t are the head and tail entities, respectively, and r represents the relationship between the head and tail entities.\n"
                "### Output Format ###\n"
                "Output:\n"
                "{thoughts & reason}\n"
                "Your process of thinking and reasoning:\n"
                "...\n"
                "{/thoughts & reason}\n"
                "Final output:\n"
                "### Related or newly added triples ###\n"
                "{triple1}\n"
                "{triple2}\n"
                "{triple3}\n"
                "...\n"
                )
        }
        return instruction_dict.get(self.mode, "Perform the requested task based on the mode.")

    def get_demonstrations(self):
        """
        获取 demonstrations 部分的内容。
        根据 mode 不同，可以返回一系列任务相关的例子。
        支持多个 example 的动态组装。
        """
        # 定义每种模式的示例
        demonstrations_dict = {
            'question_decompose': {
                1: (
                    "Input:\n"
                    "What is the name of the scientist who developed the theory that explains why objects fall to Earth?\n"
                    "Output:\n"
                    "What is the name of the scientist who developed the theory that explains why objects fall to Earth?\n"
                    "-What is the theory that explains why objects fall to Earth?\n"
                    "--Is there a theory for why objects fall to Earth?\n"
                    "--What is the name of this theory?\n"
                    "-Who developed this theory?\n"
                    "--Is this theory associated with a specific scientist?\n"
                    "--What is the name of this scientist?"
                ),
                2: (
                    "Input:\n"
                    "What type of energy powers the device invented by Thomas Edison that produces light?\n"
                    "Output:\n"
                    "What type of energy powers the device invented by Thomas Edison that produces light?\n"
                    "-What device produces light and was invented by Thomas Edison?\n"
                    "--Who is Thomas Edison?\n"
                    "--What devices did Thomas Edison invent?\n"
                    "--Is there a device invented by Thomas Edison that produces light?\n"
                    "--What is the name of this device?\n"
                    "-What type of energy powers this device?\n"
                    "--What is energy in this context?\n"
                    "--What is the primary mechanism or process that allows this device to produce light?\n"
                    "--What type of energy drives this mechanism?"
                ),
                3: (
                    "Input:\n"
                    "What inspired the author of the book \"1984\" to write it?\n"
                    "Output:\n"
                    "What inspired the author of the book \"1984\" to write it?\n"
                    "-Who is the author of the book \"1984\"?\n"
                    "--What is the book \"1984\"?\n"
                    "--Who wrote the book \"1984\"?\n"
                    "-What inspired this author to write \"1984\"?\n"
                    "--What was happening during the time this author wrote \"1984\"?\n"
                    "--What personal experiences influenced the author?\n"
                    "--What political or social events might have inspired the author?\n"
                    "--Did any other books or ideas inspire the author?"
                ),
                4: (
                    "Input:\n"
                    "What is the atomic number of the element discovered in the laboratory where the youngest Nobel Physics laureate worked?\n"
                    "Output:\n"
                    "What is the atomic number of the element discovered in the laboratory where the youngest Nobel Physics laureate worked?\n"
                    "-Who is the youngest Nobel Physics laureate?\n"
                    "--When did this person win the Nobel Prize?\n"
                    "--What was their age at the time of the award?\n"
                    "-Where did this laureate work?\n"
                    "--Did this laureate work in laboratory/institution?\n"
                    "--what's the name of the laboratory/institution?\n"
                    "-Was any chemical element discovered at this laboratory?\n"
                    "--What is the name of the element?\n"
                    "--What is its atomic number?"
                ),
                5: (
                    "Input:\n"
                    "Which country hosted the sporting event where the first female gold medalist in track and field competed?\n"
                    "Output:\n"
                    "Which country hosted the sporting event where the first female gold medalist in track and field competed?\n"
                    "-What type of sporting event is being referred to (e.g., Olympics)?\n"
                    "-Who was the first female gold medalist in track and field?\n"
                    "--What is track and field?\n"
                    "--Which female athlete won the first gold medal in this category?\n"
                    "-In which event within track and field did she win?\n"
                    "-Which country hosted this sporting event?"
                ),
            },
            'triples_trans': {
                1: (
                    "Input:\n"
                    "Triple(s):\n"
                    "1.(Beijing,located in,China)\n"
                    "2.(Eiffel Tower, located in, Paris)\n"
                    "3.(Apple, founded by, Steve Jobs)\n"
                    "4.(Python, created by, Guido van Rossum)\n"
                    "5.(Tesla, CEO of, Elon Musk)\n"
                    "Output:\n"
                    "Natural Language Question:\n"
                    "1.(Beijing,located in,China)<SEP>Which country does Beijing locate?<SEP>What cities or places are located in China?\n"
                    "2.(Eiffel Tower, located in, Paris)<SEP>In which city is the Eiffel Tower located?<SEP>What landmarks or places are located in Paris?\n"
                    "3.(Apple, founded by, Steve Jobs)<SEP>Who founded Apple?<SEP>Which companies or organizations were founded by Steve Jobs?\n"
                    "4.(Python, created by, Guido van Rossum)<SEP>Who created Python?<SEP>What programming languages or projects were created by Guido van Rossum?\n"
                    "5.(Tesla, CEO of, Elon Musk)<SEP>Who is the CEO of Tesla?<SEP>Which companies or organizations have Elon Musk as their CEO?\n"
                ),
                2: (
                    "Input:\n"
                    "Triple(s):\n"
                    "1.(Shakespeare, wrote, Hamlet)\n"
                    "2.(Titanic, sank in, Atlantic Ocean)\n"
                    "3.(New York City, located in, United States)\n"
                    "4.(Harry Potter, written by, J.K. Rowling)\n"
                    "5.(Thomas Edison, invented, Light Bulb)\n"
                    "6.(Amazon River, flows through, Brazil)\n"
                    "7.(Mars, known as, Red Planet)\n"
                    "8.(Einstein, won, Nobel Prize)\n"
                    "9.(Venus, closest planet to, Earth)\n"
                    "10.(Cheetah, fastest animal, on land)\n"
                    "11.(Pluto, classified as, dwarf planet)\n"
                    "12.(Tokyo, largest city, in Japan)\n"
                    "13.(The Sahara Desert, located in, Africa)\n"
                    "Output:\n"
                    "Natural Language Question:\n"
                    "1.(Shakespeare, wrote, Hamlet)<SEP>What did Shakespeare write?<SEP>Who wrote Hamlet?\n"
                    "2.(Titanic, sank in, Atlantic Ocean)<SEP>Where did the Titanic sink?<SEP>What sank in the Atlantic Ocean?\n"
                    "3.(New York City, located in, United States)<SEP>Where is New York City located?<SEP>What cities or places are located in the United States?\n"
                    "4.(Harry Potter, written by, J.K. Rowling)<SEP>Who wrote Harry Potter?<SEP>What books or series were written by J.K. Rowling?\n"
                    "5.(Thomas Edison, invented, Light Bulb)<SEP>What did Thomas Edison invent?<SEP>Who invented the light bulb?\n"
                    "6.(Amazon River, flows through, Brazil)<SEP>Through which country does the Amazon River flow?<SEP>Which rivers flow through Brazil?\n"
                    "7.(Mars, known as, Red Planet)<SEP>What is Mars known as?<SEP>Which celestial bodies are known as the Red Planet?\n"
                    "8.(Einstein, won, Nobel Prize)<SEP>What did Einstein win?<SEP>Who won the Nobel Prize?\n"
                    "9.(Venus, closest planet to, Earth)<SEP>Which planet is closest to Earth?<SEP>Which planets are closest to Earth?\n"
                    "10.(Cheetah, fastest animal, on land)<SEP>What is the fastest animal?<SEP>Which animals are the fastest on land?\n"
                    "11.(Pluto, classified as, dwarf planet)<SEP>How is Pluto classified?<SEP>Which celestial bodies are classified as dwarf planets?\n"
                    "12.(Tokyo, largest city, in Japan)<SEP>Which city is the largest in Japan?<SEP>Which cities are the largest in Japan?\n"
                    "13.(The Sahara Desert, located in, Africa)<SEP>Where is The Sahara Desert located?<SEP>What deserts or regions are located in Africa?\n"
                ),
                3: (
                    "Input:\n"
                    "Triple(s):\n"
                    "1.(The Great Pyramid of Giza, located in, Egypt)\n"
                    "2.(The Eiffel Tower, built in, 1889)\n"
                    "3.(Isaac Newton, discovered, Law of Gravity)\n"
                    "4.(Rome, capital of, Italy)\n"
                    "5.(The Taj Mahal, built by, Shah Jahan)\n"
                    "6.(The Moon, orbits around, Earth)\n"
                    "7.(Beethoven, composed, Symphony No. 9)\n"
                    "8.(Tesla, produces, Electric Cars)\n"
                    "9.(Galileo, known as, Father of Modern Astronomy)\n"
                    "10.(Nelson Mandela, first president of, South Africa)\n"
                    "11.(Mount Kilimanjaro, located in, Tanzania)\n"
                    "12.(Alexander Graham Bell, invented, Telephone)\n"
                    "Output:\n"
                    "Natural Language Question:\n"
                    "1.(The Great Pyramid of Giza, located in, Egypt)<SEP>Where is The Great Pyramid of Giza located?<SEP>What landmarks or places are located in Egypt?\n"
                    "2.(The Eiffel Tower, built in, 1889)<SEP>In which year was The Eiffel Tower built?<SEP>What structures were built in 1889?\n"
                    "3.(Isaac Newton, discovered, Gravity)<SEP>What did Isaac Newton discover?<SEP>Who discovered the Law of Gravity?\n"
                    "4.(Rome, capital of, Italy)<SEP>What country is Rome the capital of?<SEP>Which cities are the capitals of Italy?\n"
                    "5.(The Taj Mahal, built by, Shah Jahan)<SEP>Who built The Taj Mahal?<SEP>What other structures were built by Shah Jahan?\n"
                    "6.(The Moon, orbits around, Earth)<SEP>What does The Moon orbit around?<SEP>Which celestial bodies orbit around Earth?\n"
                    "7.(Beethoven, composed, Symphony No. 9)<SEP>What did Beethoven compose?<SEP>Who composed Symphony No. 9?\n"
                    "8.(Tesla, produces, Electric Cars)<SEP>What does Tesla produce?<SEP>Which products are produced by Tesla?\n"
                    "9.(Galileo, known as, Father of Modern Astronomy)<SEP>What is Galileo known as?<SEP>Which historical figures are known as the Father of Modern Astronomy?\n"
                    "10.(Nelson Mandela, first president of, South Africa)<SEP>Which country was Nelson Mandela the first president of?<SEP>Who were the first presidents of South Africa?\n"
                    "11.(Mount Kilimanjaro, located in, Tanzania)<SEP>Where is Mount Kilimanjaro located?<SEP>What mountains or regions are located in Tanzania?\n"
                    "12.(Alexander Graham Bell, invented, Telephone)<SEP>What did Alexander Graham Bell invent?<SEP>Who invented the telephone?\n"
                ),
            },
            # 'filter_triples': {
            #     1: (
            #         "Input:\n"
            #         "user unit queries:\n"
            #         "What is the location that appointed Michelle Bachelet to a governmental position?\n"
            #         "Who is Michelle Bachelet?\n"
            #         "What governmental position was Michelle Bachelet appointed to?\n"
            #         "Where was Michelle Bachelet appointed to this position?\n"
            #         "What language is spoken in this location?\n"
            #         "triple unit queries:\n"
            #         "(Michelle Bachelet,people.person.nationality,Chile)<SEP>What is Michelle Bachelet's nationality?<SEP>Which people have Chilean nationality?\n"
            #         "(Chile,language.human_language.countries_spoken_in,Spanish Language)<SEP>What language is spoken in Chile?<SEP>Which countries speak the Spanish Language?\n"
            #         "Output:\n"
            #         "{thought}\n"
            #         "step 1:\n"
            #         "Let’s first identify the triple unit queries. This will help us find the triple unit queries related to each user unit query later. Below are the triple unit queries:\n"
            #         "What is Michelle Bachelet's nationality?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "Which people have Chilean nationality?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "What language is spoken in Chile?<SEP>(Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
            #         "Which countries speak the Spanish Language?<SEP>(Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
            #         "step 2:\n"
            #         "Let’s analyze each user unit query and find the related triple unit queries.\n"
            #         "For the query \"What is the location that appointed Michelle Bachelet to a governmental position?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "For the query \"Who is Michelle Bachelet?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "For the query \"What governmental position was Michelle Bachelet appointed to?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "For the query \"Where was Michelle Bachelet appointed to this position?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "For the query \"What language is spoken in this location?\",the related query is \"What language is spoken in Chile?\" and \"Which countries speak the Spanish Language?\",and the corresponding triple is (Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
            #         "step 3:\n"
            #         "In Step 2, we obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
            #         "{/thought}\n"
            #         "Final output:\n"
            #         "What is the location that appointed Michelle Bachelet to a governmental position?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "Who is Michelle Bachelet?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "What governmental position was Michelle Bachelet appointed to?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "Where was Michelle Bachelet appointed to this position?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
            #         "What language is spoken in this location?<SEP>(Chile,language.human_language.countries_spoken_in,Spanish Language)"
            #     ),
            #     2: (
            #         "Input:\n"
            #         "user unit queries:\n"
            #         "What team has Lou Seal as its mascot?\n"
            #         "Who or what is Lou Seal?\n"
            #         "Which team is associated with Lou Seal as its mascot?\n"
            #         "When did this team last win the World Series?\n"
            #         "What is the World Series?\n"
            #         "What year or time frame did this team last win the World Series?\n"
            #         "triple unit queries:\n"
            #         "(Lou Seal,sports.mascot.team,San Francisco Giants)<SEP>Which team has Lou Seal as its mascot?<SEP>Who is the mascot of the San Francisco Giants?\n"
            #         "(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>Which championship event did the San Francisco Giants win?<SEP>Which team was the champion of the 2014 World Series?\n"
            #         "(San Francisco Giants,sports.sports_team.championships,2012 World Series)<SEP>Which championships have the San Francisco Giants won?<SEP>Which team won the 2012 World Series?\n"
            #         "Output:\n"
            #         "{thought}\n"
            #         "Let’s first identify the triple unit queries. This will help us find the triple unit queries related to each user unit query later. Below are the triple unit queries:\n"
            #         "Which team has Lou Seal as its mascot?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "Who is the mascot of the San Francisco Giants?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "Which championship event did the San Francisco Giants win?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)\n"
            #         "Which team was the champion of the 2014 World Series?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)\n"
            #         "Which championships have the San Francisco Giants won?<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
            #         "Which team won the 2012 World Series?<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
            #         "step 2:\n"
            #         "Let’s analyze each user unit query and find the related triple unit queries.\n"
            #         "For the query \"What team has Lou Seal as its mascot?\",the related query is \"Which team has Lou Seal as its mascot?\",and the corresponding triple is (Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "For the query \"Who or what is Lou Seal?\",the related query is None,and the corresponding triple is None\n"
            #         "For the query \"Which team is associated with Lou Seal as its mascot?\",the related query is \"Which team has Lou Seal as its mascot?\" and \"Who is the mascot of the San Francisco Giants?\",and the corresponding triple is (Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "For the query \"When did this team last win the World Series?\",the related query is \"Which team was the champion of the 2014 World Series?\" and \"Which team won the 2012 World Series?\",and the corresponding triple is (San Francisco Giants,sports.sports_championship_event.champion,2014 World Series) and (San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
            #         "For the query \"What is the World Series?\",the related query is None,and the corresponding triple is None\n"
            #         "For the query \"What year or time frame did this team last win the World Series?\",the related query is \"Which team was the champion of the 2014 World Series?\" and \"Which team won the 2012 World Series?\",and the corresponding triple is (San Francisco Giants,sports.sports_championship_event.champion,2014 World Series) and (San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
            #         "step 3:\n"
            #         "In Step 2, we obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
            #         "{/thought}\n"
            #         "Final output:\n"
            #         "What team has Lou Seal as its mascot?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "Who or what is Lou Seal?<SEP>None\n"
            #         "Which team is associated with Lou Seal as its mascot?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
            #         "When did this team last win the World Series?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
            #         "What is the World Series?<SEP>None\n"
            #         "What year or time frame did this team last win the World Series?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)"
            #     ),
            #     3: (
            #         "Input:\n"
            #         "user unit queries:\n"
            #         "What is the name of the football sports team?\n"
            #         "Is there a football sports team named Northern Colorado Bears?\n"
            #         "What is the name of this team?\n"
            #         "Is the team located in Greeley, Colorado?\n"
            #         "What educational institution is associated with this football team?\n"
            #         "Does this football team belong to a specific educational institution?\n"
            #         "What is the name of this educational institution?\n"
            #         "triple unit queries:\n"
            #         "(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)<SEP>Which educational institution has the Northern Colorado Bears football team as one of its sports teams?<SEP>Which sports teams belong to the University of Northern Colorado?\n"
            #         "(Greeley, location.location.containedby, Greeley Masonic Temple)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the Greeley Masonic Temple?\n"
            #         "(Greeley, location.location.containedby, Bank of Colorado Arena)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the Bank of Colorado Arena?\n"
            #         "(Greeley, location.location.containedby, United States of America)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are located in the United States of America?\n"
            #         "(Greeley, location.location.containedby, Jackson Field)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Jackson Field?\n"
            #         "(Greeley, location.location.containedby, Weld County)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Weld County?\n"
            #         "(Greeley, location.location.containedby, Carmike 5)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Carmike 5?\n"
            #         "(Greeley, location.location.containedby, First Baptist Church)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the First Baptist Church?\n"
            #         "(Greeley, location.location.containedby, Colorado)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are located in Colorado?\n"
            #         "Output:\n"
            #         "{thought}\n"
            #         "step 1:\n"
            #         "Let’s first identify the triple unit queries. This will help us find the triple unit queries related to each user unit query later. Below are the triple unit queries:\n"
            #         "Which educational institution has the Northern Colorado Bears football team as one of its sports teams?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "Which sports teams belong to the University of Northern Colorado?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Greeley Masonic Temple)\n"
            #         "Which places or cities are contained by the Greeley Masonic Temple?<SEP>(Greeley, location.location.containedby, Greeley Masonic Temple)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Bank of Colorado Arena)\n"
            #         "Which places or cities are contained by the Bank of Colorado Arena?<SEP>(Greeley, location.location.containedby, Bank of Colorado Arena)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, United States of America)\n"
            #         "Which places or cities are located in the United States of America?<SEP>(Greeley, location.location.containedby, United States of America)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Jackson Field)\n"
            #         "Which places or cities are contained by Jackson Field?<SEP>(Greeley, location.location.containedby, Jackson Field)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Weld County)\n"
            #         "Which places or cities are contained by Weld County?<SEP>(Greeley, location.location.containedby, Weld County)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Carmike 5)\n"
            #         "Which places or cities are contained by Carmike 5?<SEP>(Greeley, location.location.containedby, Carmike 5)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, First Baptist Church)\n"
            #         "Which places or cities are contained by the First Baptist Church?<SEP>(Greeley, location.location.containedby, First Baptist Church)\n"
            #         "What locations or landmarks is Greeley a part of?<SEP>(Greeley, location.location.containedby, Colorado)\n"
            #         "Which places or cities are located in Colorado?<SEP>(Greeley, location.location.containedby, Colorado)\n"
            #         "step 2:\n"
            #         "Let’s analyze each user unit query and find the related triple unit queries.\n"
            #         "For the query \"What is the name of the football sports team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "For the query \"Is there a football sports team named Northern Colorado Bears?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "For the query \"What is the name of this team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "For the query \"Is the team located in Greeley, Colorado?\",the related query is \"Which sports teams belong to the University of Northern Colorado?\" and \"What locations or landmarks is Greeley a part of?\" and \"Which places or cities are located in Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado) and (Greeley, location.location.containedby, Colorado)\n"
            #         "For the query \"What educational institution is associated with this football team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "For the query \"Does this football team belong to a specific educational institution?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "For the query \"What is the name of this educational institution?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "step 3:\n"
            #         "In Step 2, we obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
            #         "{/thought}\n"
            #         "Final output:\n"
            #         "What is the name of the football sports team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "Is there a football sports team named Northern Colorado Bears?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "What is the name of this team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "Is the team located in Greeley, Colorado?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)<SEP>(Greeley, location.location.containedby, Colorado)\n"
            #         "What educational institution is associated with this football team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "Does this football team belong to a specific educational institution?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
            #         "What is the name of this educational institution?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)"
            #     ),
            #     4: (
            #         "Input:\n"
            #         "user unit queries:\n"
            #         "Who is Ovadia Yosef?\n"
            #         "What is Ovadia Yosef known for?\n"
            #         "Did Ovadia Yosef hold a leadership role in a religion?\n"
            #         "What religion is associated with Ovadia Yosef?\n"
            #         "Is there a predominant religion associated with Ovadia Yosef?\n"
            #         "What is the name of this religion?\n"
            #         "triple unit queries:\n"
            #         "(Ovadia Yosef, people.person.religion, Judaism)<SEP>What religion is Ovadia Yosef associated with?<SEP>Who is associated with Judaism?\n"
            #         "(Ovadia Yosef, people.person.religion, Haredi Judaism)<SEP>Who is associated with Haredi Judaism?\n"
            #         "(Ovadia Yosef, people.person.nationality, Israel)<SEP>What is Ovadia Yosef's nationality?<SEP>Who has Israel as their nationality?\n"
            #         "(Israel, location.location.containedby, Tiberias)<SEP>What locations or landmarks are contained within Israel?<SEP>Which countries or regions contain Tiberias?\n"
            #         "(Israel, location.location.containedby, Northern District)<SEP>Which countries or regions contain the Northern District?\n"
            #         "(Israel, location.location.containedby, Atarot Airport)<SEP>Which countries or regions contain Atarot Airport?\n"
            #         "(Israel, location.location.containedby, Tel Aviv District)<SEP>Which countries or regions contain the Tel Aviv District?\n"
            #         "(Israel, location.location.containedby, Safed)<SEP>Which countries or regions contain Safed?\n"
            #         "(Israel, location.location.containedby, Dome of the Rock)<SEP>Which countries or regions contain the Dome of the Rock?\n"
            #         "(Israel, location.location.containedby, Har HaMenuchot)<SEP>Which countries or regions contain Har HaMenuchot?\n"
            #         "(Israel, location.location.containedby, Church of the Holy Sepulchre)<SEP>Which countries or regions contain the Church of the Holy Sepulchre?\n"
            #         "(Israel, location.location.containedby, Porat Yosef Yeshiva)<SEP>Which countries or regions contain Porat Yosef Yeshiva?\n"
            #         "(Israel, location.location.containedby, Mount Herzl)<SEP>Which countries or regions contain Mount Herzl?\n"
            #         "Output:\n"
            #         "{thought}\n"
            #         "step 1:\n"
            #         "Let’s first identify the triple unit queries. This will help us find the triple unit queries related to each user unit query later. Below are the triple unit queries:\n"
            #         "What religion is Ovadia Yosef associated with?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "Who is associated with Judaism?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "Who is associated with Haredi Judaism?<SEP>(Ovadia Yosef, people.person.religion, Haredi Judaism)\n"
            #         "What is Ovadia Yosef's nationality?<SEP>(Ovadia Yosef, people.person.nationality, Israel)\n"
            #         "Who has Israel as their nationality?<SEP>(Ovadia Yosef, people.person.nationality, Israel)\n"
            #         "What locations or landmarks are contained within Israel?<SEP>(Israel, location.location.containedby, Tiberias)\n"
            #         "Which countries or regions contain Tiberias?<SEP>(Israel, location.location.containedby, Tiberias)\n"
            #         "Which countries or regions contain the Northern District?<SEP>(Israel, location.location.containedby, Northern District)\n"
            #         "Which countries or regions contain Atarot Airport?<SEP>(Israel, location.location.containedby, Atarot Airport)\n"
            #         "Which countries or regions contain the Tel Aviv District?<SEP>(Israel, location.location.containedby, Tel Aviv District)\n"
            #         "Which countries or regions contain Safed?<SEP>(Israel, location.location.containedby, Safed)\n"
            #         "Which countries or regions contain the Dome of the Rock?<SEP>(Israel, location.location.containedby, Dome of the Rock)\n"
            #         "Which countries or regions contain Har HaMenuchot?<SEP>(Israel, location.location.containedby, Har HaMenuchot)\n"
            #         "Which countries or regions contain the Church of the Holy Sepulchre?<SEP>(Israel, location.location.containedby, Church of the Holy Sepulchre)\n"
            #         "Which countries or regions contain Porat Yosef Yeshiva?<SEP>(Israel, location.location.containedby, Porat Yosef Yeshiva)\n"
            #         "Which countries or regions contain Mount Herzl?<SEP>(Israel, location.location.containedby, Mount Herzl)\n"
            #         "step 2:\n"
            #         "Let’s analyze each user unit query and find the related triple unit queries.\n"
            #         "For the query \"Who is Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\" and \"What is Ovadia Yosef's nationality?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism) and (Ovadia Yosef, people.person.nationality, Israel)\n"
            #         "For the query \"What is Ovadia Yosef known for?\",the related query is None,and the corresponding triple is None\n"
            #         "For the query \"Did Ovadia Yosef hold a leadership role in a religion?\",the related query is \"What religion is Ovadia Yosef associated with?\" and \"What is Ovadia Yosef's nationality\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "For the query \"What religion is associated with Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "For the query \"Is there a predominant religion associated with Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "For the query \"What is the name of this religion?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "step 3:\n"
            #         "In Step 2, we obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
            #         "{/thought}\n"
            #         "Final output:\n"
            #         "Who is Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)<SEP>(Ovadia Yosef, people.person.nationality, Israel)\n"
            #         "What is Ovadia Yosef known for?<SEP>None\n"
            #         "Did Ovadia Yosef hold a leadership role in a religion?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "What religion is associated with Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "Is there a predominant religion associated with Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
            #         "What is the name of this religion?<SEP>(Ovadia Yosef, people.person.religion, Judaism)"
            #     ),
            #     5: (
            #         "Input:\n"
            #         "user unit queries:\n"
            #         "Who was the champion of the 1931 World Series Championship?\n"
            #         "What is the World Series Championship?\n"
            #         "Who won the World Series in 1931?\n"
            #         "Where does this champion team play?\n"
            #         "What is the name of the stadium associated with this team?\n"
            #         "Was this stadium their home stadium in 1931?\n"
            #         "triple unit queries:\n"
            #         "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)<SEP>Which team won the 1931 World Series?<SEP>Which championships were won by the St. Louis Cardinals?\n"
            #         "(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)<SEP>What stadiums or arenas are associated with the St. Louis Cardinals?<SEP>Which teams play at Busch Stadium?\n"
            #         "(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)<SEP>Which teams play at Roger Dean Stadium?<SEP>What is the home ground of the St. Louis Cardinals?\n"
            #         "(St. Louis Cardinals, home ground of, Busch Stadium)<SEP>Which teams have Busch Stadium as their home ground?\n"
            #         "(St. Louis Cardinals, home ground of, Roger Dean Stadium)<SEP>Which teams have Roger Dean Stadium as their home ground?\n"
            #         "(St. Louis Cardinals, plays at, Busch Stadium)<SEP>Where does the St. Louis Cardinals play?<SEP>Which teams play at Busch Stadium?\n"
            #         "(St. Louis Cardinals, plays at, Roger Dean Stadium)<SEP>Which teams play at Roger Dean Stadium?\n"
            #         "(St. Louis Cardinals, has arena, Busch Stadium)<SEP>What arenas or stadiums are associated with the St. Louis Cardinals?<SEP>Which teams are associated with Busch Stadium?\n"
            #         "(St. Louis Cardinals, has arena, Roger Dean Stadium)<SEP>Which teams are associated with Roger Dean Stadium?\n"
            #         "Output:\n"
            #         "{thought}\n"
            #         "step 1:\n"
            #         "Let’s first identify the triple unit queries. This will help us find the triple unit queries related to each user unit query later. Below are the triple unit queries:\n"
            #         "Which team won the 1931 World Series?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "Which championships were won by the St. Louis Cardinals?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "What stadiums or arenas are associated with the St. Louis Cardinals?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)\n"
            #         "Which teams play at Busch Stadium?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)\n"
            #         "Which teams play at Roger Dean Stadium?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)\n"
            #         "What is the home ground of the St. Louis Cardinals?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)\n"
            #         "Which teams have Busch Stadium as their home ground?<SEP>(St. Louis Cardinals, home ground of, Busch Stadium)\n"
            #         "Which teams have Roger Dean Stadium as their home ground?<SEP>(St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
            #         "Where does the St. Louis Cardinals play?<SEP>(St. Louis Cardinals, plays at, Busch Stadium)\n"
            #         "Which teams play at Busch Stadium?<SEP>(St. Louis Cardinals, plays at, Busch Stadium)\n"
            #         "Which teams play at Roger Dean Stadium?<SEP>(St. Louis Cardinals, plays at, Roger Dean Stadium)\n"
            #         "What arenas or stadiums are associated with the St. Louis Cardinals?<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "Which teams are associated with Busch Stadium?<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "Which teams are associated with Roger Dean Stadium?<SEP>(St. Louis Cardinals, has arena, Roger Dean Stadium)\n"
            #         "step 2:\n"
            #         "Let’s analyze each user unit query and find the related triple unit queries.\n"
            #         "For the query \"Who was the champion of the 1931 World Series Championship?\",the related query is \"Which team won the 1931 World Series?\",and the corresponding triple is (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "For the query \"What is the World Series Championship?\",the related query is None,and the corresponding triple is None\n"
            #         "For the query \"Who won the World Series in 1931?\",the related query is \"Which team won the 1931 World Series?\",and the corresponding triple is (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "For the query \"Where does this champion team play?\",the related query is \"Where does the St. Louis Cardinals play?\" and \"What stadiums or arenas are associated with the St. Louis Cardinals?\",and the corresponding triple is (St. Louis Cardinals, plays at, Busch Stadium) and (St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "For the query \"What is the name of the stadium associated with this team?\",the related query is \"What stadiums or arenas are associated with the St. Louis Cardinals?\" and \"What arenas or stadiums are associated with the St. Louis Cardinals?\",and the corresponding triple is (St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium) and (St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "For the query \"Was this stadium their home stadium in 1931?\",the related query is \"What is the home ground of the St. Louis Cardinals?\" and \"Which teams have Busch Stadium as their home ground?\" and \"Which teams have Roger Dean Stadium as their home ground?\",and the corresponding triple is (St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium) and (St. Louis Cardinals, home ground of, Busch Stadium) and (St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
            #         "step 3:\n"
            #         "In Step 2, we obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
            #         "{/thought}\n"
            #         "Final output:\n"
            #         "Who was the champion of the 1931 World Series Championship?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "What is the World Series Championship?<SEP>None\n"
            #         "Who won the World Series in 1931?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
            #         "Where does this champion team play?<SEP>(St. Louis Cardinals, plays at, Busch Stadium)<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "What is the name of the stadium associated with this team?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
            #         "Was this stadium their home stadium in 1931?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)<SEP>(St. Louis Cardinals, home ground of, Busch Stadium)<SEP>(St. Louis Cardinals, home ground of, Roger Dean Stadium)"
            #     )
            # },
            'filter_triples': {
                1: (
                    "Input:\n"
                    "user unit queries:\n"
                    "What is the location that appointed Michelle Bachelet to a governmental position?\n"
                    "Who is Michelle Bachelet?\n"
                    "What governmental position was Michelle Bachelet appointed to?\n"
                    "Where was Michelle Bachelet appointed to this position?\n"
                    "What language is spoken in this location?\n"
                    "triple unit queries:\n"
                    "(Michelle Bachelet,people.person.nationality,Chile)<SEP>What is Michelle Bachelet's nationality?<SEP>Which people have Chilean nationality?\n"
                    "(Chile,language.human_language.countries_spoken_in,Spanish Language)<SEP>What language is spoken in Chile?<SEP>Which countries speak the Spanish Language?\n"
                    "Output:\n"
                    "{thought}\n"
                    "Let’s analyze each user unit query and find the related triple unit queries.\n"
                    "For the query \"What is the location that appointed Michelle Bachelet to a governmental position?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
                    "For the query \"Who is Michelle Bachelet?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
                    "For the query \"What governmental position was Michelle Bachelet appointed to?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
                    "For the query \"Where was Michelle Bachelet appointed to this position?\",the related query is \"What is Michelle Bachelet's nationality?\",and the corresponding triple is (Michelle Bachelet,people.person.nationality,Chile)\n"
                    "For the query \"What language is spoken in this location?\",the related query is \"What language is spoken in Chile?\" and \"Which countries speak the Spanish Language?\",and the corresponding triple is (Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
                    "We obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
                    "{/thought}\n"
                    "Final output:\n"
                    "What is the location that appointed Michelle Bachelet to a governmental position?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "Who is Michelle Bachelet?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "What governmental position was Michelle Bachelet appointed to?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "Where was Michelle Bachelet appointed to this position?<SEP>(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "What language is spoken in this location?<SEP>(Chile,language.human_language.countries_spoken_in,Spanish Language)"
                ),
                2: (
                    "Input:\n"
                    "user unit queries:\n"
                    "What team has Lou Seal as its mascot?\n"
                    "Who or what is Lou Seal?\n"
                    "Which team is associated with Lou Seal as its mascot?\n"
                    "When did this team last win the World Series?\n"
                    "What is the World Series?\n"
                    "What year or time frame did this team last win the World Series?\n"
                    "triple unit queries:\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)<SEP>Which team has Lou Seal as its mascot?<SEP>Who is the mascot of the San Francisco Giants?\n"
                    "(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>Which championship event did the San Francisco Giants win?<SEP>Which team was the champion of the 2014 World Series?\n"
                    "(San Francisco Giants,sports.sports_team.championships,2012 World Series)<SEP>Which championships have the San Francisco Giants won?<SEP>Which team won the 2012 World Series?\n"
                    "Output:\n"
                    "{thought}\n"
                    "Let’s analyze each user unit query and find the related triple unit queries.\n"
                    "For the query \"What team has Lou Seal as its mascot?\",the related query is \"Which team has Lou Seal as its mascot?\",and the corresponding triple is (Lou Seal,sports.mascot.team,San Francisco Giants)\n"
                    "For the query \"Who or what is Lou Seal?\",the related query is None,and the corresponding triple is None\n"
                    "For the query \"Which team is associated with Lou Seal as its mascot?\",the related query is \"Which team has Lou Seal as its mascot?\" and \"Who is the mascot of the San Francisco Giants?\",and the corresponding triple is (Lou Seal,sports.mascot.team,San Francisco Giants)\n"
                    "For the query \"When did this team last win the World Series?\",the related query is \"Which team was the champion of the 2014 World Series?\" and \"Which team won the 2012 World Series?\",and the corresponding triple is (San Francisco Giants,sports.sports_championship_event.champion,2014 World Series) and (San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
                    "For the query \"What is the World Series?\",the related query is None,and the corresponding triple is None\n"
                    "For the query \"What year or time frame did this team last win the World Series?\",the related query is \"Which team was the champion of the 2014 World Series?\" and \"Which team won the 2012 World Series?\",and the corresponding triple is (San Francisco Giants,sports.sports_championship_event.champion,2014 World Series) and (San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
                    "We obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
                    "{/thought}\n"
                    "Final output:\n"
                    "What team has Lou Seal as its mascot?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
                    "Who or what is Lou Seal?<SEP>None\n"
                    "Which team is associated with Lou Seal as its mascot?<SEP>(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
                    "When did this team last win the World Series?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
                    "What is the World Series?<SEP>None\n"
                    "What year or time frame did this team last win the World Series?<SEP>(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)<SEP>(San Francisco Giants,sports.sports_team.championships,2012 World Series)"
                ),
                3: (
                    "Input:\n"
                    "user unit queries:\n"
                    "What is the name of the football sports team?\n"
                    "Is there a football sports team named Northern Colorado Bears?\n"
                    "What is the name of this team?\n"
                    "Is the team located in Greeley, Colorado?\n"
                    "What educational institution is associated with this football team?\n"
                    "Does this football team belong to a specific educational institution?\n"
                    "What is the name of this educational institution?\n"
                    "triple unit queries:\n"
                    "(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)<SEP>Which educational institution has the Northern Colorado Bears football team as one of its sports teams?<SEP>Which sports teams belong to the University of Northern Colorado?\n"
                    "(Greeley, location.location.containedby, Greeley Masonic Temple)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the Greeley Masonic Temple?\n"
                    "(Greeley, location.location.containedby, Bank of Colorado Arena)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the Bank of Colorado Arena?\n"
                    "(Greeley, location.location.containedby, United States of America)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are located in the United States of America?\n"
                    "(Greeley, location.location.containedby, Jackson Field)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Jackson Field?\n"
                    "(Greeley, location.location.containedby, Weld County)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Weld County?\n"
                    "(Greeley, location.location.containedby, Carmike 5)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by Carmike 5?\n"
                    "(Greeley, location.location.containedby, First Baptist Church)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are contained by the First Baptist Church?\n"
                    "(Greeley, location.location.containedby, Colorado)<SEP>What locations or landmarks is Greeley a part of?<SEP>Which places or cities are located in Colorado?\n"
                    "Output:\n"
                    "{thought}\n"
                    "Let’s analyze each user unit query and find the related triple unit queries.\n"
                    "For the query \"What is the name of the football sports team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "For the query \"Is there a football sports team named Northern Colorado Bears?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "For the query \"What is the name of this team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "For the query \"Is the team located in Greeley, Colorado?\",the related query is \"Which sports teams belong to the University of Northern Colorado?\" and \"What locations or landmarks is Greeley a part of?\" and \"Which places or cities are located in Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado) and (Greeley, location.location.containedby, Colorado)\n"
                    "For the query \"What educational institution is associated with this football team?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "For the query \"Does this football team belong to a specific educational institution?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\" and \"Which sports teams belong to the University of Northern Colorado?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "For the query \"What is the name of this educational institution?\",the related query is \"Which educational institution has the Northern Colorado Bears football team as one of its sports teams?\",and the corresponding triple is (Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "We obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
                    "{/thought}\n"
                    "Final output:\n"
                    "What is the name of the football sports team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "Is there a football sports team named Northern Colorado Bears?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "What is the name of this team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "Is the team located in Greeley, Colorado?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)<SEP>(Greeley, location.location.containedby, Colorado)\n"
                    "What educational institution is associated with this football team?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "Does this football team belong to a specific educational institution?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)\n"
                    "What is the name of this educational institution?<SEP>(Northern Colorado Bears football,education.educational_institution.sports_teams,University of Northern Colorado)"
                ),
                4: (
                    "Input:\n"
                    "user unit queries:\n"
                    "Who is Ovadia Yosef?\n"
                    "What is Ovadia Yosef known for?\n"
                    "Did Ovadia Yosef hold a leadership role in a religion?\n"
                    "What religion is associated with Ovadia Yosef?\n"
                    "Is there a predominant religion associated with Ovadia Yosef?\n"
                    "What is the name of this religion?\n"
                    "triple unit queries:\n"
                    "(Ovadia Yosef, people.person.religion, Judaism)<SEP>What religion is Ovadia Yosef associated with?<SEP>Who is associated with Judaism?\n"
                    "(Ovadia Yosef, people.person.religion, Haredi Judaism)<SEP>Who is associated with Haredi Judaism?\n"
                    "(Ovadia Yosef, people.person.nationality, Israel)<SEP>What is Ovadia Yosef's nationality?<SEP>Who has Israel as their nationality?\n"
                    "(Israel, location.location.containedby, Tiberias)<SEP>What locations or landmarks are contained within Israel?<SEP>Which countries or regions contain Tiberias?\n"
                    "(Israel, location.location.containedby, Northern District)<SEP>Which countries or regions contain the Northern District?\n"
                    "(Israel, location.location.containedby, Atarot Airport)<SEP>Which countries or regions contain Atarot Airport?\n"
                    "(Israel, location.location.containedby, Tel Aviv District)<SEP>Which countries or regions contain the Tel Aviv District?\n"
                    "(Israel, location.location.containedby, Safed)<SEP>Which countries or regions contain Safed?\n"
                    "(Israel, location.location.containedby, Dome of the Rock)<SEP>Which countries or regions contain the Dome of the Rock?\n"
                    "(Israel, location.location.containedby, Har HaMenuchot)<SEP>Which countries or regions contain Har HaMenuchot?\n"
                    "(Israel, location.location.containedby, Church of the Holy Sepulchre)<SEP>Which countries or regions contain the Church of the Holy Sepulchre?\n"
                    "(Israel, location.location.containedby, Porat Yosef Yeshiva)<SEP>Which countries or regions contain Porat Yosef Yeshiva?\n"
                    "(Israel, location.location.containedby, Mount Herzl)<SEP>Which countries or regions contain Mount Herzl?\n"
                    "Output:\n"
                    "{thought}\n"
                    "Let’s analyze each user unit query and find the related triple unit queries.\n"
                    "For the query \"Who is Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\" and \"What is Ovadia Yosef's nationality?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism) and (Ovadia Yosef, people.person.nationality, Israel)\n"
                    "For the query \"What is Ovadia Yosef known for?\",the related query is None,and the corresponding triple is None\n"
                    "For the query \"Did Ovadia Yosef hold a leadership role in a religion?\",the related query is \"What religion is Ovadia Yosef associated with?\" and \"What is Ovadia Yosef's nationality\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
                    "For the query \"What religion is associated with Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
                    "For the query \"Is there a predominant religion associated with Ovadia Yosef?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
                    "For the query \"What is the name of this religion?\",the related query is \"What religion is Ovadia Yosef associated with?\",and the corresponding triple is (Ovadia Yosef, people.person.religion, Judaism)\n"
                    "We obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
                    "{/thought}\n"
                    "Final output:\n"
                    "Who is Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)<SEP>(Ovadia Yosef, people.person.nationality, Israel)\n"
                    "What is Ovadia Yosef known for?<SEP>None\n"
                    "Did Ovadia Yosef hold a leadership role in a religion?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
                    "What religion is associated with Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
                    "Is there a predominant religion associated with Ovadia Yosef?<SEP>(Ovadia Yosef, people.person.religion, Judaism)\n"
                    "What is the name of this religion?<SEP>(Ovadia Yosef, people.person.religion, Judaism)"
                ),
                5: (
                    "Input:\n"
                    "user unit queries:\n"
                    "Who was the champion of the 1931 World Series Championship?\n"
                    "What is the World Series Championship?\n"
                    "Who won the World Series in 1931?\n"
                    "Where does this champion team play?\n"
                    "What is the name of the stadium associated with this team?\n"
                    "Was this stadium their home stadium in 1931?\n"
                    "triple unit queries:\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)<SEP>Which team won the 1931 World Series?<SEP>Which championships were won by the St. Louis Cardinals?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)<SEP>What stadiums or arenas are associated with the St. Louis Cardinals?<SEP>Which teams play at Busch Stadium?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)<SEP>Which teams play at Roger Dean Stadium?<SEP>What is the home ground of the St. Louis Cardinals?\n"
                    "(St. Louis Cardinals, home ground of, Busch Stadium)<SEP>Which teams have Busch Stadium as their home ground?\n"
                    "(St. Louis Cardinals, home ground of, Roger Dean Stadium)<SEP>Which teams have Roger Dean Stadium as their home ground?\n"
                    "(St. Louis Cardinals, plays at, Busch Stadium)<SEP>Where does the St. Louis Cardinals play?<SEP>Which teams play at Busch Stadium?\n"
                    "(St. Louis Cardinals, plays at, Roger Dean Stadium)<SEP>Which teams play at Roger Dean Stadium?\n"
                    "(St. Louis Cardinals, has arena, Busch Stadium)<SEP>What arenas or stadiums are associated with the St. Louis Cardinals?<SEP>Which teams are associated with Busch Stadium?\n"
                    "(St. Louis Cardinals, has arena, Roger Dean Stadium)<SEP>Which teams are associated with Roger Dean Stadium?\n"
                    "Output:\n"
                    "{thought}\n"
                    "Let’s analyze each user unit query and find the related triple unit queries.\n"
                    "For the query \"Who was the champion of the 1931 World Series Championship?\",the related query is \"Which team won the 1931 World Series?\",and the corresponding triple is (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "For the query \"What is the World Series Championship?\",the related query is None,and the corresponding triple is None\n"
                    "For the query \"Who won the World Series in 1931?\",the related query is \"Which team won the 1931 World Series?\",and the corresponding triple is (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "For the query \"Where does this champion team play?\",the related query is \"Where does the St. Louis Cardinals play?\" and \"What stadiums or arenas are associated with the St. Louis Cardinals?\",and the corresponding triple is (St. Louis Cardinals, plays at, Busch Stadium) and (St. Louis Cardinals, has arena, Busch Stadium)\n"
                    "For the query \"What is the name of the stadium associated with this team?\",the related query is \"What stadiums or arenas are associated with the St. Louis Cardinals?\" and \"What arenas or stadiums are associated with the St. Louis Cardinals?\",and the corresponding triple is (St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium) and (St. Louis Cardinals, has arena, Busch Stadium)\n"
                    "For the query \"Was this stadium their home stadium in 1931?\",the related query is \"What is the home ground of the St. Louis Cardinals?\" and \"Which teams have Busch Stadium as their home ground?\" and \"Which teams have Roger Dean Stadium as their home ground?\",and the corresponding triple is (St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium) and (St. Louis Cardinals, home ground of, Busch Stadium) and (St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
                    "We obtained the triple unit queries related to each user unit query, along with their corresponding triples. We will organize them in the output format of triple<SEP>user unit queries.\n"
                    "{/thought}\n"
                    "Final output:\n"
                    "Who was the champion of the 1931 World Series Championship?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "What is the World Series Championship?<SEP>None\n"
                    "Who won the World Series in 1931?<SEP>(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "Where does this champion team play?<SEP>(St. Louis Cardinals, plays at, Busch Stadium)<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
                    "What is the name of the stadium associated with this team?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)<SEP>(St. Louis Cardinals, has arena, Busch Stadium)\n"
                    "Was this stadium their home stadium in 1931?<SEP>(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)<SEP>(St. Louis Cardinals, home ground of, Busch Stadium)<SEP>(St. Louis Cardinals, home ground of, Roger Dean Stadium)"
                )
            },
            'filter_entities': {
                
            },'structural_enrich': {
                1: (
                    "Input:\n"
                    "(Michelle Bachelet,people.person.nationality,Chile)-What is the location that appointed Michelle Bachelet to a governmental position?-Who is Michelle Bachelet?-What governmental position was Michelle Bachelet appointed to?-Where was Michelle Bachelet appointed to this position?\n"
                    "(Chile,language.human_language.countries_spoken_in,Spanish Language)-What language is spoken in this location?\n"
                    "1-hop:\n"
                    "(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "2-hop:\n"
                    "(Michelle Bachelet,people.person.nationality,Chile)->(Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
                    "Output:\n"
                    "{thought}\n"
                    "step 1:\n"
                    "To prepare for the subsequent semantic enhancement of the triples and bridge the semantic gap between the triples and the user queries, let me review the triples along with their corresponding user query(ies):\n"
                    "(Michelle Bachelet,people.person.nationality,Chile)-What is the location that appointed Michelle Bachelet to a governmental position?-Who is Michelle Bachelet?-What governmental position was Michelle Bachelet appointed to?-Where was Michelle Bachelet appointed to this position?\n"
                    "(Chile,language.human_language.countries_spoken_in,Spanish Language)-What language is spoken in this location?\n"
                    "step 2:\n"
                    "Using the similarity property, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (Michelle Bachelet,people.person.nationality,Chile),the related queries are \"What is the location that appointed Michelle Bachelet to a governmental position?\" , \"Who is Michelle Bachelet?\" , \"What governmental position was Michelle Bachelet appointed to?\" , \"Where was Michelle Bachelet appointed to this position?\" .Combining these queries, The newly added  triple(s) is/are (Michelle Bachelet,appointed_government_position_in,Chile)\n"
                    "Using the symmetry properties, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (Michelle Bachelet,people.person.nationality,Chile),the related queries are \"What is the location that appointed Michelle Bachelet to a governmental position?\" , \"Who is Michelle Bachelet?\" , \"What governmental position was Michelle Bachelet appointed to?\" , \"Where was Michelle Bachelet appointed to this position?\" .Combining these queries, The newly added  triple(s) is/are (Chile, appointed_as_government_official_by, Michelle Bachelet)\n"
                    "step 3:\n"
                    "Using the transitivity properties, perform semantic enhancement on the given 2-hop subgraph:\n"
                    "For the 2-hop subgraph (Michelle Bachelet,people.person.nationality,Chile)->(Chile,language.human_language.countries_spoken_in,Spanish Language),the related queries are \"What is the location that appointed Michelle Bachelet to a governmental position?\" , \"Who is Michelle Bachelet?\" , \"What governmental position was Michelle Bachelet appointed to?\" , \"Where was Michelle Bachelet appointed to this position?\" , What language is spoken in this location?. Combining these queries, The newly added  triple(s) is/are (Michelle Bachelet, language_of_the_country_where_appointed ,Spanish Language)\n"
                    "step 4:\n"
                    "Final output:\n"
                    "(Michelle Bachelet,appointed_government_position_in,Chile)\n"
                    "(Chile, appointed_as_government_official_by, Michelle Bachelet)\n"
                    "(Michelle Bachelet, language_of_the_country_where_appointed ,Spanish Language)\n"
                    "{/thought}"
                ),
                2: (
                    "Input:\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)-What team has Lou Seal as its mascot?-Which team is associated with Lou Seal as its mascot?\n"
                    "(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)-When did this team last win the World Series?-What year or time frame did this team last win the World Series?\n"
                    "(San Francisco Giants,sports.sports_team.championships,2012 World Series)-When did this team last win the World Series?-What year or time frame did this team last win the World Series?\n"
                    "1-hop:\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)\n"
                    "2-hop:\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)->(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)->(San Francisco Giants,sports.sports_team.championships,2012 World Series)\n"
                    "Output:\n"
                    "{thought}\n"
                    "step 1:\n"
                    "To prepare for the subsequent semantic enhancement of the triples and bridge the semantic gap between the triples and the user queries, let me review the triples along with their corresponding user query(ies):\n"
                    "(Lou Seal,sports.mascot.team,San Francisco Giants)-What team has Lou Seal as its mascot?-Which team is associated with Lou Seal as its mascot?\n"
                    "(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series)-When did this team last win the World Series?-What year or time frame did this team last win the World Series?\n"
                    "(San Francisco Giants,sports.sports_team.championships,2012 World Series)-When did this team last win the World Series?-What year or time frame did this team last win the World Series?\n"
                    "step 2:\n"
                    "Using the similarity property, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (Lou Seal,sports.mascot.team,San Francisco Giants),the related queries are \"What team has Lou Seal as its mascot?\" , \"Which team is associated with Lou Seal as its mascot?\" . Combining these queries, The newly added  triple(s) is/are (Lou Seal,associated_with_team,San Francisco Giants)\n"
                    "Using the symmetry properties, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (Lou Seal,sports.mascot.team,San Francisco Giants),the related queries are \"What team has Lou Seal as its mascot?\" , \"Which team is associated with Lou Seal as its mascot?\" . Combining these queries, The newly added  triple(s) is/are (San Francisco Giants,has_mascot,Lou Seal)\n"
                    "step 3:\n"
                    "Using the transitivity properties, perform semantic enhancement on the given 2-hop subgraph:\n"
                    "For the 2-hop subgraph (Lou Seal,sports.mascot.team,San Francisco Giants)->(San Francisco Giants,sports.sports_championship_event.champion,2014 World Series),the related queries are \"What team has Lou Seal as its mascot?\" and \"Which team is associated with Lou Seal as its mascot?\" , \"When did this team last win the World Series?\" , \"What year or time frame did this team last win the World Series?\" . Combining these queries, The newly added  triple(s) is/are (Lou Seal,mascot_of_team_that_last_won,2014 World Series)\n"
                    "For the 2-hop subgraph (Lou Seal,sports.mascot.team,San Francisco Giants)->(San Francisco Giants,sports.sports_team.championships,2012 World Series),the related queries are \"What team has Lou Seal as its mascot?\" and \"Which team is associated with Lou Seal as its mascot?\" , \"When did this team last win the World Series?\" , \"What year or time frame did this team last win the World Series?\" . Combining these queries, The newly added  triple(s) is/are (Lou Seal,mascot_of_team_that_won,2012 World Series)\n"
                    "step 4:\n"
                    "Final output:\n"
                    "(Lou Seal,associated_with_team,San Francisco Giants)\n"
                    "(San Francisco Giants,has_mascot,Lou Seal)\n"
                    "(Lou Seal,mascot_of_team_that_last_won,2014 World Series)\n"
                    "(Lou Seal,mascot_of_team_that_won,2012 World Series)\n"
                    "{/thought}"
                ),
                3: (
                    "Input:\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)-Who was the champion of the 1931 World Series Championship?-Who won the World Series in 1931?\n"
                    "(St. Louis Cardinals, plays at, Busch Stadium)-Where does this champion team play?\n"
                    "(St. Louis Cardinals, has arena, Busch Stadium)-Where does this champion team play?-What is the name of the stadium associated with this team?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)-What is the name of the stadium associated with this team?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)-Was this stadium their home stadium in 1931?\n"
                    "(St. Louis Cardinals, home ground of, Busch Stadium)-Was this stadium their home stadium in 1931?\n"
                    "(St. Louis Cardinals, home ground of, Roger Dean Stadium)-Was this stadium their home stadium in 1931?\n"
                    "1-hop:\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "2-hop:\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, plays at, Busch Stadium)\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, has arena, Busch Stadium)\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, home ground of, Busch Stadium)\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
                    "Output:\n"
                    "{thought}\n"
                    "step 1:\n"
                    "To prepare for the subsequent semantic enhancement of the triples and bridge the semantic gap between the triples and the user queries, let me review the triples along with their corresponding user query(ies):\n"
                    "(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)-Who was the champion of the 1931 World Series Championship?-Who won the World Series in 1931?\n"
                    "(St. Louis Cardinals, plays at, Busch Stadium)-Where does this champion team play?\n"
                    "(St. Louis Cardinals, has arena, Busch Stadium)-Where does this champion team play?-What is the name of the stadium associated with this team?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)-What is the name of the stadium associated with this team?\n"
                    "(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)-Was this stadium their home stadium in 1931?\n"
                    "(St. Louis Cardinals, home ground of, Busch Stadium)-Was this stadium their home stadium in 1931?\n"
                    "(St. Louis Cardinals, home ground of, Roger Dean Stadium)-Was this stadium their home stadium in 1931?\n"
                    "step 2:\n"
                    "Using the similarity property, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\".Combining these queries, The newly added  triple(s) is/are (1931 World Series, champion_1931_World_Series, St. Louis Cardinals)\n"
                    "Using the symmetry properties, perform semantic enhancement on the given 1-hop subgraph:\n"
                    "For the 1-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\".Combining these queries, The newly added  triple(s) is/are (St. Louis Cardinals, won_1931_World_Series_as_champion, 1931 World Series)\n"
                    "step 3:\n"
                    "Using the transitivity properties, perform semantic enhancement on the given 2-hop subgraph:\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, plays at, Busch Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\" and \"Where does this champion team play?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, champion_team_plays_at, Busch Stadium)\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, has arena, Busch Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\" and \"Where does this champion team play?\" and \"What is the name of the stadium associated with this team?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, stadium_related_to_champion_team, Busch Stadium)\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\" and \"What is the name of the stadium associated with this team?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, stadium_related_to_champion_team, Busch Stadium)\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?\" and \"Was this stadium their home stadium in 1931?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, home_stadium_related_to_champion_team, Roger Dean Stadium)\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, home ground of, Busch Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?" and "Was this stadium their home stadium in 1931?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, home_stadium_related_to_champion_team, Busch Stadium)\n"
                    "For the 2-hop subgraph (1931 World Series, sports.sports_team.championships, St. Louis Cardinals)->(St. Louis Cardinals, home ground of, Roger Dean Stadium),the related queries are \"Who was the champion of the 1931 World Series Championship?\" and \"Who won the World Series in 1931?" and "Was this stadium their home stadium in 1931?\".Combining these queries, The newly added triple(s) is/are (1931 World Series, home_stadium_related_to_champion_team, Roger Dean Stadium)\n"
                    "step 4:\n"
                    "Final output:\n"
                    "(1931 World Series, champion_1931_World_Series, St. Louis Cardinals)\n"
                    "(St. Louis Cardinals, won_1931_World_Series_as_champion, 1931 World Series)\n"
                    "(1931 World Series, champion_team_plays_at, Busch Stadium)\n"
                    "(1931 World Series, stadium_related_to_champion_team, Busch Stadium)\n"
                    "(1931 World Series, home_stadium_related_to_champion_team, Roger Dean Stadium)\n"
                    "(1931 World Series, home_stadium_related_to_champion_team, Busch Stadium)\n"
                    "{/thought}"
                )
            },'feature_enrich': {
                1: (
                    "Input:\n"
                    "entity List:\n"
                    "[$Michelle Bachelet$ context]\n"
                    "relavent triple(s):(Michelle Bachelet,people.person.nationality,Chile)\n"
                    "relavent user query(ies) is the location that appointed Michelle Bachelet to a governmental position?-Who is Michelle Bachelet?-What governmental position was Michelle Bachelet appointed to?-Where was Michelle Bachelet appointed to this position?\n"
                    "[/$Michelle Bachelet$ context]\n"
                    "[$Chile$ context]\n"
                    "relavent triple(s):(Michelle Bachelet,people.person.nationality,Chile)-(Chile,language.human_language.countries_spoken_in,Spanish Language)\n"
                    "relavent user query(ies) is the location that appointed Michelle Bachelet to a governmental position?-Who is Michelle Bachelet?-What governmental position was Michelle Bachelet appointed to?-Where was Michelle Bachelet appointed to this position?-What language is spoken in this location?\n"
                    "[/$Chile$ context]\n"
                    "Output:\n"
                    "{result}\n"
                    "(Michelle Bachelet, Hypernym_isA, Political Figure)\n"
                    "(Michelle Bachelet, Hypernym_isA, President)\n"
                    "(Chile, Hypernym_isA, Country)\n"
                    "(Chile, Hypernym_locateAt, South America)\n"
                    "(Chile, Inclusion_hasContext, Spanish Language)\n"
                    "{/result}\n"
                ),
                2: (
                    "Input:\n"
                    "entity List:\n"
                    "[$Ovadia Yosef$ context]\n"
                    "relavent triple(s):(Ovadia Yosef, people.person.religion, Judaism)-(Ovadia Yosef, people.person.nationality, Israel)\n"
                    "relavent user query(ies) is Ovadia Yosef?-Did Ovadia Yosef hold a leadership role in a religion?-What religion is associated with Ovadia Yosef?-Is there a predominant religion associated with Ovadia Yosef?-What is the name of this religion?\n"
                    "[/$Ovadia Yosef$ context]\n"
                    "[$Judaism$ context]\n"
                    "relavent triple(s):(Ovadia Yosef, people.person.religion, Judaism)\n"
                    "relavent user query(ies) is Ovadia Yosef?-Did Ovadia Yosef hold a leadership role in a religion?-What religion is associated with Ovadia Yosef?-Is there a predominant religion associated with Ovadia Yosef?-What is the name of this religion?\n"
                    "[/$Judaism$ context]\n"
                    "[$Israel$ context]\n"
                    "relavent triple(s):(Ovadia Yosef, people.person.nationality, Israel)\n"
                    "relavent user query(ies) is Ovadia Yosef?\n"
                    "[/$Israel$ context]\n"
                    "Output:\n"
                    "{result}\n"
                    "(Ovadia Yosef, Hypernym_isA, Religious Leader)\n"
                    "(Ovadia Yosef, Induction_belongTo, Jewish Religious Leaders)\n"
                    "(Judaism, Hypernym_isA, Religion)\n"
                    "(Judaism, Inclusion_hasContext, Jewish Culture)\n"
                    "(Israel, Hypernym_isA, Country)\n"
                    "(Israel, Hypernym_locateAt, Middle East)\n"
                    "{/result}\n"
                ),
                3: (
                    "Input:\n"
                    "entity List:\n"
                    "[$1931 World Series$ context]\n"
                    "relavent triple(s):(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)\n"
                    "relavent user query(ies) was the champion of the 1931 World Series Championship?-Who won the World Series in 1931?\n"
                    "[/$1931 World Series$ context]\n"
                    "[$St. Louis Cardinals$ context]\n"
                    "relavent triple(s):(1931 World Series, sports.sports_team.championships, St. Louis Cardinals)-(St. Louis Cardinals, plays at, Busch Stadium)-(St. Louis Cardinals, has arena, Busch Stadium)-(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)-(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)-(St. Louis Cardinals, home ground of, Busch Stadium)-(St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
                    "relavent user query(ies) was the champion of the 1931 World Series Championship?-Who won the World Series in 1931?-Where does this champion team play?-Where does this champion team play?-What is the name of the stadium associated with this team?-What is the name of the stadium associated with this team?-Was this stadium their home stadium in 1931?-Was this stadium their home stadium in 1931?-Was this stadium their home stadium in 1931?\n"
                    "[/$St. Louis Cardinals$ context]\n"
                    "[$Busch Stadium$ context]\n"
                    "relavent triple(s):(St. Louis Cardinals, plays at, Busch Stadium)-(St. Louis Cardinals, has arena, Busch Stadium)-(St. Louis Cardinals, sports.sports_team.arena_stadium, Busch Stadium)-(St. Louis Cardinals, home ground of, Busch Stadium)\n"
                    "relavent user query(ies) does this champion team play?-Where does this champion team play?-What is the name of the stadium associated with this team?-Was this stadium their home stadium in 1931?\n"
                    "[/$Busch Stadium$ context]\n"
                    "[$Roger Dean Stadium$ context]\n"
                    "relavent triple(s):(St. Louis Cardinals, sports.sports_team.arena_stadium, Roger Dean Stadium)-(St. Louis Cardinals, home ground of, Roger Dean Stadium)\n"
                    "relavent user query(ies) this stadium their home stadium in 1931?-Was this stadium their home stadium in 1931?\n"
                    "[/$Roger Dean Stadium$ context]\n"
                    "Output:\n"
                    "{result}\n"
                    "(1931 World Series, Hypernym_isA, Sports Championship)\n"
                    "(1931 World Series, Induction_belongTo, Baseball Championships)\n"
                    "(St. Louis Cardinals, Hypernym_isA, Baseball Team)\n"
                    "(St. Louis Cardinals, Hypernym_locateAt, United States)\n"
                    "(St. Louis Cardinals, Inclusion_isPartOf, Major League Baseball)\n"
                    "(Busch Stadium, Hypernym_isA, Sports Arena)\n"
                    "(Busch Stadium, Induction_belongTo, Baseball Stadiums)\n"
                    "(Roger Dean Stadium, Hypernym_isA, Sports Arena)\n"
                    "(Roger Dean Stadium, Induction_belongTo, Baseball Stadiums)\n"
                    "{/result}\n"
                )
            },'qa': {
                1:(
                    "Input:\n"
                    "who won fedex cup 2012\n"
                    "information:\n"
                    "(m.0n1v8cy,  awarded,  FedEx Cup)\n"
                    "(FedEx Cup,  described_by,  m.08q5wy)\n"
                    "(FedEx Cup,  recognized_for,  g.12559n8g_)\n"
                    "(FedEx Cup,  final_standings_for,  2012 PGA Tour)\n"
                    "(FedEx Cup, Hypernym_isA, Sports Award)\n"
                    "(FedEx Cup, Induction_belongTo, Golf Championships)\n"
                    "(m.0n1v8cy, Hypernym_isA, Winner)\n"
                    "(m.0n1v8cy, Inclusion_isPartOf, 2012 PGA Tour)\n"
                    "(m.08q5wy, Inclusion_hasContext, FedEx Cup Article)\n"
                    "(g.12559n8g_, Inclusion_hasContext, FedEx Cup Notable Information)\n"
                    "(2012 PGA Tour, Hypernym_isA, Sports League Season)\n"
                    "(FedEx Cup, sports.sports_award_type.winners, m.0n1v8cy)<SEP>who won fedex cup 2012<SEP>Who won the FedEx Cup in 2012\n"
                    "(FedEx Cup, common.topic.article, m.08q5wy)<SEP>What is the FedEx Cup\n"
                    "(FedEx Cup, common.topic.notable_for, g.12559n8g_)<SEP>What is the FedEx Cup\n"
                    "(2012 PGA Tour, sports.sports_league_season.awards, m.0n1v8cy)<SEP>What were the final standings in the FedEx Cup for 2012\n"
                    "(m.0n1v8cy, sports.sports_award.season, 2012 PGA Tour)<SEP>What were the final standings in the FedEx Cup for 2012\n"
                    "(Brandt Snedeker, sports.sports_award_winner.awards, m.0n1v8cy)<SEP>What awards has Brandt Snedeker won?<SEP>Who has won the award m.0n1v8cy?\n"
                    "(FedEx Cup, common.topic.notable_types, Sports League Award Type)<SEP>What notable types are associated with the FedEx Cup?<SEP>What awards are categorized as Sports League Award Type?\n"
                    "(m.0n1v8cy, sports.sports_award.award_winner, Brandt Snedeker)<SEP>Who is the award winner of m.0n1v8cy?<SEP>What awards has Brandt Snedeker won?\n"
                    "(m.0n1v8cy, sports.sports_award.award, FedEx Cup)<SEP>What award is associated with m.0n1v8cy?<SEP>What awards are given for the FedEx Cup?\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To answer the question \"who won FedEx Cup 2012,\" I need to analyze the provided information.\n\n"
                    "From the triples, I see that:\n"
                    "1. The FedEx Cup is awarded to \"m.0n1v8cy.\"\n"
                    "2. The triple (m.0n1v8cy, awarded, FedEx Cup) confirms that \"m.0n1v8cy\" is indeed the winner of the FedEx Cup.\n"
                    "3. There is a specific mention that \"Brandt Snedeker\" is associated with \"m.0n1v8cy\" as the award winner of the FedEx Cup.\n\n"
                    "Thus, I can conclude that Brandt Snedeker is the individual who won the FedEx Cup in 2012.\n"
                    "Final answer:\n"
                    "Brandt Snedeker\n"
                    "{/thoughts & reason}\n"
                ),
                2:(
                    "Input:\n"
                    "who plays knox overstreet\n"
                    "information:\n"
                    "(Knox Overstreet,  is_a,  Film character)\n"
                    "(Film character,  has_character,  Knox Overstreet)\n"
                    "(Knox Overstreet,  appears_in,  m.0jx21d)\n"
                    "(Knox Overstreet,  is_played_by,  m.0jx21d)\n"
                    "(Knox Overstreet,  portrayed_in_character,  m.0jx21d)\n"
                    "(m.0jx21d,  has_actor,  Josh Charles)\n"
                    "(Knox Overstreet, Hypernym_isA, Film Character)\n"
                    "(Knox Overstreet, Induction_belongTo, Fictional Characters)\n"
                    "(Film character, Hypernym_isA, Character Type)\n"
                    "(Josh Charles, Hypernym_isA, Actor)\n"
                    "(Josh Charles, Induction_belongTo, Film Actors)\n"
                    "(m.0jx21d, Hypernym_isA, Film)\n"
                    "(m.0jx21d, Inclusion_isPartOf, Filmography of Josh Charles)\n"
                    "(Knox Overstreet, is_played_by, m.0jx21d)<SEP>who plays knox overstreet\n"
                    "(m.0jx21d, has_actor, Josh Charles)<SEP>Who portrayed Knox Overstreet<SEP>What is the name of the actor who plays Knox Overstreet\n"
                    "(Knox Overstreet, portrayed_in_character, m.0jx21d)<SEP>Who is Knox Overstreet<SEP>What is the character Knox Overstreet from<SEP>In which movie or book does Knox Overstreet appear\n"
                    "(m.0jx21d, film.performance.character, Knox Overstreet)<SEP>who plays knox overstreet\n"
                    "(m.0jx21d, film.performance.actor, Josh Charles)<SEP>Who portrayed Knox Overstreet<SEP>What is the name of the actor who plays Knox Overstreet\n"
                    "(Josh Charles, film.actor.film, m.0jx21d)<SEP>What other roles has this actor played\n"
                    "(Dead Poets Society, film.film.starring, m.0jx21d)<SEP>Who stars in Dead Poets Society?<SEP>What films star m.0jx21d?\n"
                    "(m.0jx21d, film.performance.film, Dead Poets Society)<SEP>In which film does m.0jx21d perform?<SEP>Which performances are in the film Dead Poets Society?\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To answer the question \"who plays Knox Overstreet,\" I will analyze the provided information step by step.\n\n"
                    "1. **Identifying the Character**: The first few triples indicate that Knox Overstreet is a film character. Specifically, the triple (Knox Overstreet, is_played_by, m.0jx21d) suggests that there is a specific entity (m.0jx21d) associated with the portrayal of Knox Overstreet.\n\n"
                    "2. **Finding the Actor**: The triple (m.0jx21d, has_actor, Josh Charles) directly states that the entity m.0jx21d is associated with the actor Josh Charles. This indicates that Josh Charles is the actor who plays Knox Overstreet.\n\n"
                    "3. **Confirming the Relationship**: The triple (m.0jx21d, film.performance.actor, Josh Charles) further confirms that Josh Charles is indeed the actor associated with the performance of the character Knox Overstreet in the film.\n\n"
                    "4. **Final Verification**: The information consistently points to Josh Charles as the actor portraying Knox Overstreet, with multiple triples supporting this conclusion.\n\n"
                    "Based on this reasoning, the answer to the question is clear.\n\n"
                    "Final answer:\n"
                    "Josh Charles\n"
                    "{/thoughts & reason}\n"
                ),
                3:(
                    "Input:\n"
                    "what is the official language of brazil now\n"
                    "information:\n"
                    "(Brazil,  current_official_language,  Portuguese Language)\n"
                    "(Portuguese Language,  is_official_language_of,  Brazil)\n"
                    "(Brazil, Hypernym_isA, Country)\n"
                    "(Brazil, Inclusion_hasContext, Portuguese Language)\n"
                    "(Portuguese Language, Hypernym_isA, Language)\n"
                    "(Portuguese Language, Inclusion_hasContext, Brazil)\n"
                    "(Brazil, current_official_language, Portuguese Language)<SEP>what is the official language of brazil now<SEP>What is the current official language of Brazil?<SEP>Is there only one official language in Brazil\n"
                    "(Portuguese Language, is_official_language_of, Brazil)<SEP>what is the official language of brazil now<SEP>What is the current official language of Brazil?<SEP>Is there only one official language in Brazil\n"
                    "(Brazil, location.country.languages_spoken, Portuguese Language)<SEP>What languages are spoken in Brazil?<SEP>In which countries is Portuguese Language spoken?\n"
                    "(Portuguese Language, language.human_language.countries_spoken_in, Brazil)<SEP>In which country is Portuguese Language spoken?<SEP>What languages are spoken in Brazil?\n"
                    "(Brazil, location.country.official_language, Portuguese Language)<SEP>what is the official language of brazil now<SEP>What is the current official language of Brazil?<SEP>Is there only one official language in Brazil\n"
                    "(Brazil, location.country.languages_spoken, Brazilian Portuguese)<SEP>What languages are spoken in Brazil?<SEP>In which countries is Brazilian Portuguese spoken?\n"
                    "(Brazilian Portuguese, language.language_dialect.language, Portuguese Language)<SEP>What language is Brazilian Portuguese a dialect of?<SEP>What dialects are associated with Portuguese Language?\n"
                    "(Brazilian Portuguese, language.human_language.main_country, Brazil)<SEP>Which country is Brazilian Portuguese the main language of?<SEP>What languages are primarily spoken in Brazil?\n"
                    "(Portuguese Language, language.human_language.dialects, Brazilian Portuguese)<SEP>What dialects are associated with Portuguese Language?<SEP>What languages are dialects of Brazilian Portuguese?\n"
                    "(Brazilian Portuguese, language.human_language.countries_spoken_in, Brazil)<SEP>In which country is Brazilian Portuguese spoken?<SEP>What languages are spoken in Brazil?\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To answer the question \"what is the official language of Brazil now,\" I will analyze the provided information. \n\n"
                    "From the triples, I see the following relevant ones:\n"
                    "1. (Brazil, current_official_language, Portuguese Language)\n"
                    "2. (Portuguese Language, is_official_language_of, Brazil)\n\n"
                    "These two triples indicate that the current official language of Brazil is Portuguese. \n\n"
                    "Additionally, there are other triples that confirm the relationship between Brazil and the Portuguese language, such as:\n"
                    "- (Brazil, location.country.languages_spoken, Portuguese Language)\n"
                    "- (Portuguese Language, language.human_language.countries_spoken_in, Brazil)\n\n"
                    "These further reinforce that Portuguese is the primary language spoken in Brazil.\n\n"
                    "The question also asks if there is only one official language in Brazil. Based on the information provided, it appears that Portuguese is the only official language mentioned, as no other languages are indicated as official in the triples.\n\n"
                    "Thus, I conclude that the official language of Brazil is Portuguese, and it seems to be the only official language.\n\n"
                    "Final answer:\n"
                    "Portuguese Language\n"
                    "{/thoughts & reason}\n"
                )
            },'direct_qa': {
                1:(
                    "Input:\n"
                    "what does jamaican people speak?\n"
                    "information:\n"
                    "(Jamaican Creole English Language, language.human_language.region, Americas)\n"
                    "(Jamaican Creole English Language, language.human_language.main_country, Jamaica)\n"
                    "(Jamaican Creole English Language, language.human_language.countries_spoken_in, Jamaica)\n"
                    "(Jamaican English, language.human_language.countries_spoken_in, Jamaica)\n"
                    "(Jamaican Creole English Language, common.topic.notable_types, Human Language)\n"
                    "(Jamaican English, common.topic.notable_types, Human Language)\n"
                    "(Jamaica, location.country.languages_spoken, Jamaican English)\n"
                    "(Jamaica, location.country.official_language, Jamaican English)\n"
                    "(Jamaica, location.country.languages_spoken, Jamaican Creole English Language)\n"
                    "(Jamaican Creole English Language, language.human_language.countries_spoken_in, Costa Rica)\n"
                    "(Jamaican English, base.schemastaging.context_name.pronunciation, g.125_kkdgj)\n"
                    "(Jamaican English, common.topic.notable_for, g.1255wtfxx)\n"
                    "(Jamaica, Land We Love, music.composition.language, English Language)\n"
                    "(Bahamas, location.country.languages_spoken, English Language)\n"
                    "(Turks and Caicos Islands, location.country.languages_spoken, English Language)\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To answer the question \"what does Jamaican people speak,\" I need to analyze the provided information about languages spoken in Jamaica.\n\n"
                    "From the triples, I see that:\n"
                    "1. Jamaican Creole English Language is mentioned as a language spoken in Jamaica.\n"
                    "2. Jamaican English is also listed as a language spoken in Jamaica, and it is noted as the official language of the country.\n"
                    "3. Both Jamaican Creole English and Jamaican English are categorized under human languages and are associated with Jamaica.\n\n"
                    "Given this information, it is clear that the primary languages spoken by Jamaican people are Jamaican English and Jamaican Creole English.\n"
                    "{/thoughts & reason}\n"
                    "Final answer:\n"
                    "Jamaican English<SEP>Jamaican Creole English Language"
                ),
                2:(
                    "Input:\n"
                    "who plays ken barlow in coronation street?\n"
                    "information:\n"
                    "(Ken Barlow, fictional_universe.fictional_character.parents, Ida Barlow)\n"
                    "(Ken Barlow, fictional_universe.fictional_character.parents, Frank Barlow)\n"
                    "(Ken Barlow, fictional_universe.fictional_character.gender, Male)\n"
                    "(Coronation Street - Season 23, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 27, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 50, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 51, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 53, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 54, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street - Season 55, tv.tv_series_season.regular_cast, m.0wkd82f)\n"
                    "(Coronation Street, fictional_universe.tv_series.character, Ken Barlow)\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To answer the question \"who plays Ken Barlow in Coronation Street,\" I need to identify the actor associated with the character Ken Barlow in the provided information.\n"
                    "\n"
                    "The information includes various episodes and details about the character Ken Barlow, but it does not explicitly mention the actor's name. However, I can infer that Ken Barlow is a long-standing character in the show \"Coronation Street,\" which has been running for many years.\n"
                    "\n"
                    "Ken Barlow is a significant character in the series, and historically, he has been portrayed by actor William Roache. Given that the information does not contradict this and considering the prominence of the character, it is reasonable to conclude that William Roache is the actor who plays Ken Barlow.\n"
                    "\n"
                    "{/thoughts & reason}\n"
                    "Final answer:\n"
                    "William Roache"
                ),
                3:(
                    "Input:\n"
                    "where is jamarcus russell from?\n"
                    "information:\n"
                    "(JaMarcus Russell, people.person.place_of_birth, Mobile)\n"
                    "(Mobile, location.location.containedby, Alabama)\n"
                    "(Mobile, location.statistical_region.population, g.11x1lghdb)\n"
                    "(Mobile, location.statistical_region.population, m.0hk5bdb)\n"
                    "(Mobile, location.location.events, Battle of Fort Charlotte)\n"
                    "(Mobile, location.statistical_region.population, g.11x1hk9qh)\n"
                    "(Mobile, location.statistical_region.population, g.11x1gs043)\n"
                    "(Mobile, location.statistical_region.population, m.066h8gz)\n"
                    "(Mobile, location.location.geolocation, m.0kb0s6)\n"
                    "(Mobile, location.statistical_region.population, g.11b66g7msm)\n"
                    "Output:\n"
                    "{thoughts & reason}\n"
                    "To determine where JaMarcus Russell is from, we can analyze the provided triples. The relevant triple is:\n"
                    "\n"
                    "- (JaMarcus Russell, people.person.place_of_birth, Mobile)\n"
                    "\n"
                    "This indicates that JaMarcus Russell was born in Mobile.\n"
                    "\n"
                    "Since the question specifically asks where he is from, and the information indicates his place of birth, we can conclude that he is from Mobile.\n"
                    "{/thoughts & reason}\n"
                    "Final answer:\n"
                    "Mobile"
                )
            },'filter_gt_triples':{

            }
        }
        # 根据当前模式获取示例
        examples = demonstrations_dict.get(self.mode, {})
        if not examples:
            return "No demonstrations available."
        # 动态组装 {demonstrations}{/demonstrations} 
        demonstrations = ""
        for example_id, example_content in examples.items():
            demonstrations += f"### Example {example_id}:\n{example_content}\n\n"
        # 移除末尾多余的换行符\n
        return demonstrations.strip()
        

    def build_prompt(self):
        """
        组装最终的 prompt。
        """
        prompt = (
            "[INST] <<SYS>>\n"
            f"{self.role}\n"
            "<</SYS>>\n"
            f"{{instruction}}\n{self.instruction}\n{{/instruction}}\n"
            f"{{demonstrations}}\n{self.demonstrations}\n{{/demonstrations}}\n"
            "### Your Turn\n"
            f"Input:\n {self.question}\n"
            "[/INST]"
        )
        return prompt